#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <0 27>;
        };

        command_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <10 27>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E      &kp R                   &kp T                                                                        &kp Y                   &kp U  &lt 5 I    &kp O    &kp P
&kp A         &kp S         &kp D      &kp F                   &kp G                 &kp LG(LS(S))               &kp TAB                    &kp H                   &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z         &kp X         &kp C      &kp V                   &kp B                 &mt LEFT_ALT DELETE         &mt RIGHT_SHIFT BACKSPACE  &kp N                   &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt 6 ESCAPE  &kp LEFT_WIN  &lt 5 ESC  &lt_to_layer_0 2 LANG2  &mt LEFT_SHIFT SPACE  &mt LEFT_CONTROL ENTER      &kp ENTER                  &lt_to_layer_0 1 LANG1                             &tog 5
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNCTION {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                           &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0
&kp TAB       &trans        &trans        &trans        &trans        &none                 &none              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp F6          &kp F7          &kp F8        &kp F9           &kp F10
&kp TAB       &none         &none         &none         &kp LEFT_ALT  &kp LCTRL             &kp LG(L)          &none                                                          &none
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp TILDE  &kp LC(LEFT_ARROW)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp LC(RIGHT_ARROW)                                               &none            &none   &none   &none   &kp MINUS
&mkp MB3   &mkp MB4            &mkp MB1         &mkp MB2           &mkp MB5             &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &trans           &trans  &trans  &trans  &kp EQUAL
&none      &kp F2              &kp F3           &kp F4             &kp F5               &trans                       &kp F10         &kp F6           &kp F7  &kp F8  &kp F9  &kp DOUBLE_QUOTES
&trans     &trans              &trans           &trans             &trans               &trans                       &trans          &kp RIGHT_SHIFT                          &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans    &trans    &trans    &trans                          &trans    &trans    &trans    &trans    &trans
&mkp MB3  &mkp MB4  &mkp MB1  &mkp MB2  &mkp MB5  &none       &mkp MB3  &mkp MB4  &mkp MB1  &mkp MB2  &mkp MB5  &mkp MB3
&trans    &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans      &trans    &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&kp LEFT_CONTROL  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&kp LEFT_GUI      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LA(TAB)       &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
